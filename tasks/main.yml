---
# tasks file for bootstrap
- name: load default variables
  include_vars:
    file: default.yml

- name: assert variables
  assert:
    that:
      - "{{ item.assertion }}"
    msg: "{{ item.message }}"
  with_items:
    - "{{ bootstrap_assertion_rules }}"

- name: wait for the host
  wait_for:
    port: "{{ ansible_port | default('22') }}"
    host: "{{ inventory_hostname }}"
  delegate_to: localhost
  become: no
  when:
    - inventory_hostname is defined
    - ansible_connection is defined
    - ansible_connection != "docker"
    - bootstrap_wait_for_host == true

- name: register apk
  raw: apk --version
  register: apk
  changed_when: no
  failed_when: no
  become: no
  check_mode: no

- name: register apt_get
  raw: apt-get --version
  register: apt_get
  changed_when: no
  failed_when: no
  become: no
  check_mode: no

- name: register dnf
  raw: dnf --version
  register: dnf
  changed_when: no
  failed_when: no
  become: no
  check_mode: no

- name: register emerge
  raw: emerge --version
  register: emerge
  changed_when: no
  failed_when: no
  become: no
  check_mode: no

- name: register pacman
  raw: pacman --version
  register: pacman
  changed_when: no
  failed_when: no
  become: no
  check_mode: no

- name: register yum
  raw: yum --version
  register: yum
  changed_when: no
  failed_when: no
  become: no
  check_mode: no

- name: register zypper
  raw: zypper --version
  register: zypper
  changed_when: no
  failed_when: no
  become: no
  check_mode: no

- name: install software with apk
  raw: apk update ; apk add {{ bootstrap_apk_packages }}
  when:
    - apk.rc == 0
  register: apkresult
  changed_when:
    - "'Installing' in apkresult.stdout"
  remote_user: "{{ bootstrap_user }}"
  until: apkresult is succeeded
  retries: 3

- name: install software with apt-get
  raw: apt-get update ; apt-get -y install {{ bootstrap_apt_packages }}
  when:
    - apt_get.rc == 0
    - zypper.rc != 0
  register: apt_getresult
  changed_when:
    - "' 0 newly installed' not in apt_getresult.stdout"
  remote_user: "{{ bootstrap_user }}"
  until: apt_getresult is succeeded
  retries: 3

- name: install software with dnf
  raw: dnf -y install {{ bootstrap_dnf_packages }}
  when:
    - dnf.rc == 0
  register: dnfresult
  changed_when:
    - "'Nothing' not in dnfresult.stdout"
  remote_user: "{{ bootstrap_user }}"
  until: dnfresult is succeeded
  retries: 3

- name: install software with emerge
  raw: equery l {{ bootstrap_emerge_packages }} || (emaint -a sync ; emerge -qkv {{ bootstrap_emerge_packages }} ; echo "changed")
  when:
    - emerge.rc == 0
  register: emergeresult
  changed_when:
    - "'changed' in emergeresult.stdout"
  remote_user: "{{ bootstrap_user }}"
  until: emergeresult is succeeded
  retries: 3

- name: install software with pacman
  raw: pacman -Syu ; pacman -T {{ bootstrap_pacman_packages }} || pacman -S --noconfirm {{ bootstrap_pacman_packages }}
  when:
    - pacman.rc == 0
  register: pacmanresult
  changed_when:
    - "' installing python' in pacmanresult.stdout"
  remote_user: "{{ bootstrap_user }}"
  until: pacmanresult is succeeded
  retries: 3

- name: install software with yum
  raw: yum -y install {{ bootstrap_yum_packages }}
  when:
    - yum.rc == 0
  register: yumresult
  changed_when:
    - "'Nothing' not in yumresult.stdout"
  remote_user: "{{ bootstrap_user }}"
  until: yumresult is succeeded
  retries: 3

- name: install software with zypper
  raw: zypper -n install {{ bootstrap_zypper_packages }}
  when:
    - zypper.rc == 0
  register: zypperresult
  changed_when:
    - "'Nothing' not in zypperresult.stdout"
  remote_user: "{{ bootstrap_user }}"
  failed_when: no
  until: zypperresult is succeeded
  retries: 3

- name: gather facts
  setup:
  become: no

- name: load os-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - default.yml

- name: install software to support stable modules
  package:
    name: "{{ item }}"
  with_items:
    - "{{ bootstrap_stable_packages }}"
  register: packagestableresult
  until: packagestableresult is succeeded
  retries: 3
  notify:
    - gather facts

- name: install software to support preview modules
  package:
    name: "{{ item }}"
  with_items:
    - "{{ bootstrap_preview_packages }}"
  when:
    - bootstrap_preview
  register: packagepreviewresult
  until: packagepreviewresult is succeeded
  retries: 3
  notify:
    - gather facts

- name: flush handlers
  meta: flush_handlers
